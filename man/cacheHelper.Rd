% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{listOrEnvDigestRecursive}
\alias{listOrEnvDigestRecursive}
\alias{digestRaster}
\alias{getFunctionName}
\title{Custom tools for digesting objects}
\usage{
listOrEnvDigestRecursive(object)

digestRaster(object, compareRasterFileLength, algo)

getFunctionName(FUN)
}
\arguments{
\item{object}{an object to convert to a 'digestible' state}

\item{compareRasterFileLength}{Numeric. Optional. When there are Rasters, that
have file-backed storage, this is passed to the length arg in \code{digest}
when determining if the Raster file is already in the database.
Note: uses \code{\link[digest]{digest}} for file-backed Raster.
Default 1e6. Passed to \code{prepareFileBackedRaster}.}

\item{algo}{The algorithms to be used; currently available choices are
    \code{md5}, which is also the default, \code{sha1}, \code{crc32},
    \code{sha256}, \code{sha512}, \code{xxhash32}, \code{xxhash64} and
    \code{murmur32}.}

\item{FUN}{A function}
}
\description{
For reproducibility, there are many features or attributes of objects that must
be removed e.g., environments have unique labels, rasters have several infrequently
used slots and elements that are not perfectly maintained with manipulation.
These customDigest functions attempt to deal with some of the types of problems.
In conjunction with \code{\link{makeDigestible}}, these are helpers to create
consisten cache results.

These are internal only.
}
\seealso{
\code{\link{makeDigestible}}
}
\author{
Eliot McIntire
}
