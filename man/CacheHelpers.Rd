% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBI.R
\name{CacheDBFile}
\alias{CacheDBFile}
\alias{CacheStorageDir}
\alias{CacheStoredFile}
\alias{CacheDBTableName}
\alias{CacheIsACache}
\title{A collection of low level tools for Cache}
\usage{
CacheDBFile(cachePath, drv = RSQLite::SQLite())

CacheStorageDir(cachePath)

CacheStoredFile(cachePath, hash)

CacheDBTableName(cachePath, drv = RSQLite::SQLite())

CacheIsACache(cachePath, create = FALSE, drv = RSQLite::SQLite(), conn = NULL)
}
\arguments{
\item{cachePath}{A path describing the directory in which to create
the database file(s)}

\item{drv}{an object that inherits from \linkS4class{DBIDriver},
or an existing \linkS4class{DBIConnection}
object (in order to clone an existing connection).}

\item{hash}{The cacheId or otherwise digested hash value, as character string.}

\item{conn}{A \linkS4class{DBIConnection} object, as returned by
\code{\link[DBI:dbConnect]{dbConnect()}}.}
}
\description{
These are not intended for normal use.
}
\details{
\code{CacheStoredFile} returns the file path to the file with the specified hash value.

\code{CacheStoredFile} returns the file path to the file with the specified hash value.

\code{CacheIsACache} returns a logical of whether the specified cachePath
  is actually a functioning cache.
}
