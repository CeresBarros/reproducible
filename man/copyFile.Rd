% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache-helpers.R
\name{copyFile}
\alias{copyFile}
\title{Copy a file using \code{Robocopy} on Windows and \code{rsync} on Linux/macOS}
\usage{
copyFile(from = NULL, to = NULL, useRobocopy = TRUE, overwrite = TRUE,
  delDestination = FALSE, create = TRUE, silent = FALSE,
  recursive = TRUE)
}
\arguments{
\item{from}{The source file.}

\item{to}{The new file.}

\item{useRobocopy}{For Windows, this will use a system call to \code{Robocopy}
which appears to be much faster than the internal \code{file.copy} function.
Uses \code{/MIR} flag. Default \code{TRUE}.}

\item{overwrite}{Passed to \code{file.copy}}

\item{delDestination}{Logical, whether the destination should have any files deleted,
if they don't exist in the source. This is \code{/purge}.}

\item{create}{Passed to \code{checkLazyDir}.}

\item{silent}{Should a progress be printed.}

\item{recursive}{logical.  If \code{to} is a directory, should
    directories in \code{from} be copied (and their contents)?  (Like
    \command{cp -R} on POSIX OSes.)}
}
\description{
This will copy an individual file faster using \code{Robocopy} on Windows,
and using \code{rsync} on macOS and Linux.
}
\examples{
tmpDirFrom <- file.path(tempdir(), "example_fileCopy_from")
tmpDirTo <- file.path(tempdir(), "example_fileCopy_to")
tmpFile <- tempfile("file", tmpDirFrom, ".csv")
dir.create(tmpDirFrom)

write.csv(data.frame(a = 1:10, b = runif(10), c = letters[1:10]), tmpFile)
copyFile(tmpFile, file.path(tmpDirTo, basename(tmpFile)))
file.exists(file.path(tmpDirTo, basename(tmpFile))) ## TRUE
identical(read.csv(tmpFile), read.csv(file.path(tmpDirTo, basename(tmpFile))))

unlink(tmpDirFrom, recursive = TRUE)
unlink(tmpDirTo, recursive = TRUE)

}
\author{
Eliot McIntire and ALex Chubaty
}
